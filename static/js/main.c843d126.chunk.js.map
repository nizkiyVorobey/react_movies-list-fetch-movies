{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/getNewMovie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_BASE_URL","a","fetch","response","json","data","Response","Error","FindMovie","addNewMovie","useState","filedValue","setFiledValue","isLoad","setIsLoad","isError","setIsError","errorMessage","setErorMessage","newMovie","setNewMovie","htmlFor","type","id","placeholder","onChange","event","target","value","style","display","onClick","getNewMovie","then","Title","Plot","Poster","Year","imdbID","catch","includes","App","state","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c843d126.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const API_BASE_URL = 'http://www.omdbapi.com/?apikey=7d946cd0&t=';\n\nexport async function getNewMovie(movie: string): Promise<NewMovie> {\n  const response = await fetch(`${API_BASE_URL}${movie}`);\n  const data: OmdbResponse = await response.json();\n\n  if (data.Response === 'False') {\n    throw new Error(data.Error);\n  }\n\n  return data as unknown as NewMovie;\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport { getNewMovie } from '../../api/getNewMovie';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addNewMovie: any;\n  movies: Movie[];\n}\n\nexport const FindMovie = ({ addNewMovie, movies }: Props) => {\n  const [filedValue, setFiledValue] = useState('');\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErorMessage] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie>({});\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setFiledValue(event.target.value);\n  };\n\n  const getMovie = () => {\n    getNewMovie(filedValue)\n      .then(movie => {\n        setNewMovie({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: movie.Year,\n          imdbId: movie.imdbID,\n        });\n\n        setIsError(false);\n        setIsLoad(true);\n        setErorMessage('');\n      })\n      .catch(() => {\n        setIsError(true);\n        setIsLoad(false);\n        setErorMessage('we dont find any movie');\n      });\n  };\n\n  const addMovie = () => {\n    const id = movies.map(movie => movie.imdbId);\n\n    setFiledValue('');\n\n    if (isLoad) {\n      if (!id.includes(newMovie.imdbId)) {\n        addNewMovie(newMovie);\n        setNewMovie({});\n        setIsLoad(false);\n      } else {\n        setErorMessage('Movie has been add already');\n      }\n    } else {\n      setErorMessage('There are not movie for adding');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isError ? 'is-danger' : ''}`}\n              onChange={handleChange}\n              value={filedValue}\n            />\n          </div>\n\n          <p className=\"help is-danger\" style={{ display: errorMessage ? 'inline' : 'none' }}>\n            {errorMessage}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isLoad ? <MovieCard {...newMovie} /> : null}\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    movies: data,\n  };\n\n  addNewMovie = (movie: Movie): void => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addNewMovie={this.addNewMovie} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}